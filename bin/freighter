#!/usr/bin/env ruby

require 'optparse'
require 'bundler/setup'
require 'freighter'
require 'pry'

options = Freighter.options

if defined?(Rails)
  options.config_path = "#{Rails.root}/config/freighter.yml" 
else
  options.config_path = "./config/freighter.yml" 
end

OptionParser.new do |opts|
  opts.banner = "Usage: freigter [options] (deploy|configure|verify-config)"

  opts.on('-e ENV', 'environment * required') do |env|
    options.environment = env
  end

  opts.on('-v', '--verbose', 'verbose logging') do
    options.verbose = true
  end

  opts.on('-c', '--config PATH', 'path to yml config. Default is ./config/freighter.yml') do |opt|
    if opt
      options.config_path = opt
    elsif defiend?(Rails) && Rails.root
      options.config_path = "#{Rails.root}/config/freighter.yml"
    end
  end

  opts.on('-a', '--app APP_NAME', 'The name of the app to deploy') do |app_name|
    options.app_name = app_name
  end

  opts.on('--all', 'Deploy all apps for the environment') do
    raise "Can not use options --app and --all as they conflict" if options.app_name
    options.deploy_all = true
  end

  opts.on('--user SSH_USER', 'User name used for the SSH connection. (optional depending on your configuration)') do |user|
    options.ssh_user = user
  end

  opts.on('--version') do
    puts "Freighter version: #{Freighter::VERSION}"
    exit
  end

  # This option is not yet implemented because the docker REST api is not the best at searching available images
  # opts.on('--no-pull', 'specify if you do not wish to pull the image') do
  #   options.pull_image = false
  # end
end.parse!

logger  = Freighter.logger

# todo - brush up on nautical jargon to find a better way of saying the freighter is to depart
logger.info "All hand on deck. Toot toot."

case ARGV[0]
when "deploy"
  unless options.environment
    logger.error "Must specify an environment with the -e option" 
  end
  # check to see if the container name is specified or all containers should be deployed
  unless (options.app_name || options.deploy_all)
    logger.error "Must specify either container(s) with --app or --all option" 
  end
  Freighter::Deploy.new
when "configure"
  if File.exist?('./config/freighter.yml')
    logger.info "./config/freighter.yml already exists"
  else
    example_path = File.expand_path('../../config/freighter.example.yml', __FILE__)
    begin
      FileUtils.mkdir('config')
    rescue Errno::EEXIST
    end
    FileUtils.cp(example_path, 'config/freighter.yml')
    logger.info "Example configuration copied to ./config/freighter.yml"
    logger.info "Edit the file with your configuration."
    logger.info "Please remember to prefer to use ENV vars instead of passwords when editing the configuration."
  end
when "verify-config"
  Freighter::Parser.new(options.config_path)
  logger.info "Your configuration checks out"
else
  logger.error "unexpected command given: #{ARGV[0]}. See usage. freighter --help"
end

